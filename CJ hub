local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Gameplay Hub",
    LoadingTitle = "Gameplay Hub",
    LoadingSubtitle = "by CJ",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "Big Hub"
    },
    Discord = {
       Enabled = false,
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "Untitled",
       Subtitle = "Key System",
       Note = "No method of obtaining the key is provided",
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })

 local PlayerTab = Window:CreateTab("Player", 4483362458) -- Title, Image

 local Slider = PlayerTab:CreateSlider({
    Name = "WalkSpeed",
    Range = {1, 500},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = 500,
    Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
     game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
    end,
 })

 local Slider = PlayerTab:CreateSlider({
    Name = "Jump Height",
    Range = {10, 500},
    Increment = 1,
    Suffix = "Height",
    CurrentValue = 500,
    Flag = "Slider3", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
     game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
    end,
 })

local Slider = PlayerTab:CreateSlider({
    Name = "Fling Power",
    Range = {10, 5000},
    Increment = 10,
    Suffix = "Power",
    CurrentValue = 1000,
    Flag = "FlingPowerSlider",
    Callback = function(Value)
        -- Fling function
        local function fling(target, power)
            if target and target:FindFirstChild("HumanoidRootPart") then
                local humanoidRootPart = target.HumanoidRootPart
                local bodyVelocity = Instance.new("BodyVelocity")
                bodyVelocity.Velocity = Vector3.new(math.random(-power, power), power, math.random(-power, power))
                bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)  -- Applying extreme force to fling
                bodyVelocity.P = 10000  -- High value for more forceful fling
                bodyVelocity.Parent = humanoidRootPart
                
                -- Clean up after 0.1 seconds
                game:GetService("Debris"):AddItem(bodyVelocity, 0.1)
            end
        end
        
        -- Apply fling to all players except the local player
        for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
            if player ~= game.Players.LocalPlayer and player.Character then
                local character = player.Character
                if character:FindFirstChild("HumanoidRootPart") then
                    fling(character, Value / 10)  -- Adjust value for appropriate fling range
                end
            end
        end
    end,
})
